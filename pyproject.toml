[build-system]
requires = ["hatchling>=1.5.0", "hatch-nodejs-version"]
build-backend = "hatchling.build"

[project]
name = "jupytext"
description = "Jupyter notebooks as Markdown documents, Julia, Python or R scripts"
license = { file = "LICENSE" }
authors = [
    { name = "Marc Wouts", email = "marc.wouts@gmail.com" },
]
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: MIT License",
    "Environment :: Console",
    "Framework :: Jupyter",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Text Processing :: Markup",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "nbformat",
    "pyyaml",
    "toml",
    "markdown-it-py>=1.0.0",
    "mdit_py_plugins",
]
dynamic = ["version"]

[project.urls]
homepage = "https://github.com/mwouts/jupytext"
source = "https://github.com/mwouts/jupytext"
documentation = "https://jupytext.readthedocs.io/en/latest/index.html"

[project.optional-dependencies]
extension = [
    "jupytext_extension",
]
dev = [
    "autopep8",
    "black",
    "isort",
    "flake8",
    "pytest",
    "pytest-cov>=2.6.1",
    "gitpython",
    "jupyterlab",
    "notebook",
    "nbconvert",
    "ipykernel",
]
# left for back-compatibility
rst2md = [
    "sphinx-gallery~=0.7.0",
]

[project.scripts]
"jupytext" = "jupytext.cli:jupytext"
"jupytext-config" = "jupytext.jupytext_config:main"

[tool.hatch.version]
path = "jupytext/version.py"

[tool.hatch.build.targets.wheel.shared-data]
"jupyter-config" = "etc/jupyter"
"jupytext/nbextension" = "share/jupyter/nbextensions/jupytext"

[tool.check-wheel-contents]
ignore = ["W002"]

[tool.pylint.'MASTER']
max-line-length = 127

[tool.pylint.'MESSAGES CONTROL']
# Disable C0330 warnings, cf https://github.com/psf/black/issues/48
disable = [
    "bad-continuation",
]

[tool.pytest.ini_options]
addopts = [
    "--color=yes",
    "--cov-report=xml",
    "--cov=jupytext",
    "--cov-branch",
]
filterwarnings = [
    # Uncomment this "error" to turn all unfiltered warnings into errors
    # "error",
    # use single quote to denote raw strings in toml
    # (10 warnings)
    'ignore:Passing unrecognized arguments to super\(KernelSpec\).__init__:DeprecationWarning',
    # Not seen any more with latest Python + libs
    "ignore:Passing a schema to Validator.iter_errors is deprecated and will be removed in a future release:DeprecationWarning",
    # in test_utf8_out_331 and two others
    # Not seen any more with latest Python + libs
    'ignore:Exception ignored in. <function Context.__del__:pytest.PytestUnraisableExceptionWarning',
    # In test_markdown_jupytext_nbconvert_is_identity
    'ignore:.*contextfilter.* renamed to .*pass_context:DeprecationWarning',
    # in test_cli_expect_errors and two others
    'ignore:Exception ignored in. <socket.socket:pytest.PytestUnraisableExceptionWarning',
    # in test_paired_paths / Python 3.6
    'ignore:Exception ignored in. <bound method Context.__del__:pytest.PytestUnraisableExceptionWarning',
    # test_config_jupytext_jupyter_fs_meta_manager
    'ignore:The alias `_\(\)` will be deprecated. Use `_i18n\(\)` instead.:FutureWarning',
    # Conda/Python 3.7/Windows - ImportError while loading conftest
    "ignore:the imp module is deprecated in favour of importlib:DeprecationWarning",
    "ignore:Code cell is missing an id field:FutureWarning",
    "ignore:There is no current event loop:DeprecationWarning",
]

[tool.coverage.run]
omit = [
    "tests/*",
]
parallel = true
branch = false

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    "if self.debug:",
    # Have to re-enable the standard pragma
    "pragma: no cover",

    "if __name__ == .__main__.:",

    # Don't complain if tests don't hit defensive assertion code:
    "raise NotImplementedError",
    "except ImportError",
]
ignore_errors = true
omit = [
    "tests/*",
    "jupytext/version.py",
    "*/site-packages/*"
]

# To use tox, see https://tox.readthedocs.io
# Simply pip or conda install tox
# If you use conda, you may also want to install tox-conda
# then run `tox` or `tox -- {pytest args}`
# To run in parallel using `tox -p` (this does not appear to work for this repo)

# To rebuild the tox environment, for example when dependencies change, use
# `tox -r`

# Note: if the following error is encountered: `ImportError while loading conftest`
# then then deleting compiled files has been found to fix it: `find . -name \*.pyc -delete`
[tool.tox]
legacy_tox_ini = """
    [tox]
    envlist = py{35,36,37,38}

    [testenv:py{35,36,37,38}]
    ; recreate = false
    deps =
        -rrequirements.txt
        -rrequirements-dev.txt
        jupyter-fs
    commands_pre = python -m ipykernel install --name jupytext-tox-{envname} --user
    commands = pytest {posargs}

    [testenv:docs-{update,clean}]
    deps = -rdocs/doc-requirements.txt
    whitelist_externals = rm
    commands =
        clean: rm -rf docs/_build
        sphinx-build {posargs} -nW --keep-going -b html docs/ docs/_build/html
"""
